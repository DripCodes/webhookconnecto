import json
import smtplib, ssl
import pymongo
from datetime import datetime
from pymongo import MongoClient
from elasticsearch import Elasticsearch
import uuid
import time
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

from pprint import pprint

client = MongoClient("mongodb+srv://sammaster123:dogmaster123@cluster0.hs3xu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority")
db = client.myFirstDatabase
collection = db["sam_collection"]
# pprint(db)

port = 465  # For SSL
password = "HCL12345"
smtp_server = "smtp.gmail.com"  # Electronic mail transmission
sender_email = "dummysam245@gmail.com"  # Enter sender address
receiver_email = "dummysam245@gmail.com"  # Enter receiver address


es = Elasticsearch(
            scheme="http",
            hosts=[{'port': 9200, 'host': 'localhost'}],
        #ssl_context=open_distro_ssl_context,
            http_auth=("admin", "admin")  # replace with your username then password
)


context = ssl.create_default_context()

unique_files = collection.distinct("filename")
#print(unique_files)
for unique_file in unique_files:
    #print(unique_file)
    files = []
    delta = 0
    differing_days = 0
    # get the last two records with this file name
    for y in collection.find({"filename": unique_file}, {'_id': False}).sort("timestamp", -1).limit(2):
        files.append(y)
        # print(y)

    last_record = files[0]
    last_record_author = last_record['author']
    last_record_date = datetime.fromisoformat(last_record['timestamp'])
    if len(files) > 1:
        secondary_record_date = datetime.fromisoformat(files[1]['timestamp'])
        delta = last_record_date - secondary_record_date
        differing_days = delta.days

    number_of_updates = collection.count_documents({"filename": unique_file, "author": last_record_author})


    # datetime_object0 = datetime.strptime(files[0]['timestamp'], '%Y-%m-%dT%H:%M:%S%z')
    # datetime_object1 = datetime.strptime(files[1]['timestamp'], '%Y-%m-%dT%H:%M:%S%z')
    # delta = (datetime_object0 - datetime_object1).days


    if differing_days >= 1 or number_of_updates <= 1:
        print("Suspicious activity detected in the file " + last_record['filename'])
        date_time = last_record['timestamp']
        pattern = '%Y-%m-%dT%H:%M:%S%z'
        last_record['timestamp'] = int(time.mktime(time.strptime(date_time, pattern)))

            # body = f"Suspicious activity detected in the file {last_record['filename']}. Last touched by {last_record['author']}, action: {last_record['action']}"
        res = es.update(
            index='test_index2',
            doc_type='file',
            id=last_record['filename'],
            body={'doc': last_record, 'doc_as_upsert': True}
        )
       # print(res)

serverStatusResult = db.command("serverStatus")
# pprint(serverStatusResult)
